<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"HTTP://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<!-- 로그인 처리 -->
	<select id="login" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	select * from member where mid=#{mid} and mpw=#{mpw}
	</select>
	
	<!-- 카카오 아이디 확인 -->
	<select id="kakao" resultType="memDTO" parameterType="memDTO">
	select * from member where mid=#{mid}
	</select>
	
	<insert id="kinsert" parameterType="memDTO">
	insert into member(mno,mid,memail,mname) values(mno_seq.nextval,#{mid},#{memail},#{mname})
	</insert>
	
	<!-- 카카오up -->
	<update id="kakaoup" parameterType="memDTO">
	update member set mname='${mname}',mnick='${mnick}',mbirth=${mbirth},mtel=${mtel},msex='${msex}' where mid='${mid}'
	</update>
	
	<!-- 회원가입 -->
	<insert id="join" parameterType="memDTO">
		insert into member
		values ((select NVL(MAX(mno),1)+1 from member),#{mid}, #{mpw},
		#{memail},#{mname}, #{mnick}, #{mbirth},#{mtel},#{mtel2},
		#{mtype},sysdate,#{mlogdate},#{msex},'은행','계좌번호')
	</insert>
	
	<!-- 아이디 중복 확인 -->
	<select id="getMemberID" parameterType="memDTO" resultType="memDTO">
		select * from member
		where mid=#{mid}
	</select>
	
	<!-- 닉네임 중복 확인 -->
	<select id="getMemberNICK" parameterType="memDTO" resultType="memDTO">
		select * from member
		where mnick=#{mnick}
	</select>
	
	<!-- 아이디찾기  -->
	<select id="findId" resultType="memDTO" parameterType="java.util.HashMap">
		select * from member
		where (mname=#{mname} AND memail=#{memail})
	</select>
	
	<!-- 이메일 있는지 확인 -->
	<select id="checkMail" resultType="int" parameterType="String">
		select count(*) from member
		where memail=#{memail}
	</select>
	
	<!-- 비밀번호 찾기에서 비밀번호 변경 -->
	<update id="findPwChange" parameterType="memDTO">
		update member set mpw=#{mpw} where mid=#{mid}
	</update>
	
	<!-- 회원 수 조회, 검색 기능 포함 -->
	<select id="totalCntWithSearch" resultType="Integer" parameterType="String">
		select  count(*) from member where mid like '%${value}%' 
	</select>

	<!-- 회원 검색 및 리스트 출력--> <!-- 회원 번호가 아닌 ROWNUM()순서로 정렬하여 출력한다 -->
	<!-- 오라클의 검색쿼리문 -> 
	1.  like '%'||#{searchWord}||'%' =>  String은 ' '으로 감싸져서 쿼리문에 입력되기 때문에 문자열 합치기 메소드를 활용해야함 
	2.  like '%${searchWord}%'  => 파라미터를 단일 String으로 할 경우 #{value} 활용
	-->
	<select id="searchList" resultType="java.util.HashMap" parameterType="PageUtil">
		select * from(
				select row_number() over (order by mno) num,
					A.* from member A 
						where mid like '%'||#{searchWord}||'%' 
						order by mno desc
				)
		where num between #{startNo} and #{endNo}
	</select>
	
	<!-- 회원 정보 출력 -->
	<select id="memInfo" resultType="memDTO" parameterType="memDTO">
	select * from member where mno = #{mno}
	</select>
	
	<!-- 최근 접속일 갱신 -->
	<update id="logDate" parameterType="java.util.HashMap">
		UPDATE member SET mlogdate=sysdate where mno=#{mno}
	</update>
	
	<update id="memUpdate" parameterType="memDTO">
		UPDATE member 
		SET mid='${mid}', mpw='${mpw}', memail='${memail}', mname='${mname}', mnick='${mnick}', mbirth='${mbirth}', mtel='${mtel}', mtel2='${mtel2}', mtype=${mtype}
		where mno=#{mno}
	</update>
	
	<delete id="memDelete" parameterType="Integer">
		delete member where mno=#{mno}
	</delete>
	
	<!-- 마이페이지용 -->
	<!-- 회원이 구매한 모든 상품 -->
	<select id="getItem" resultType="memDTO" parameterType="memDTO">
	select * from item 
    where ino in (select ino from orderdetail 
        where ono in (select ono from orders 
            where mid=#{mid}));
	</select>
	
	
	<!-- 회원 배송지 확인 -->
	<select id="memAddress" resultType="addressDTO" parameterType="addressDTO">
	select * from address
	where mid = #{mid}
	order by ano desc
	</select>
	
	<!-- 회원 배송지 추가 -->
	<insert id="memaddressinsert" parameterType="addressDTO">
	insert into address(ano, aaddno, aaddress1, aaddress2, mid, aname, aphone)
	values((SELECT NVL(MAX(ano)+1,0) FROM address), #{aaddno}, #{aaddress1}, #{aaddress2} || #{aaddress3}, #{mid}, #{aname}, #{aphone})
	</insert>
	
	
	<!-- 회원 배송지 삭제 -->
	<delete id="memaddressdelete" parameterType="addressDTO">
		DELETE address WHERE ano=#{ano}
	</delete>
	        
	<delete id="memDelete2" parameterType="memDTO">
	delete member where mid=#{mid} and mpw=#{mpw}
	</delete>
</mapper>
	
